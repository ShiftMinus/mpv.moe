#!/usr/bin/env node
// Generated by LiveScript 1.5.0
(function(){
  var cheerio, request, cp, readline, shows, complete, rl;
  cheerio = require('cheerio');
  request = require('request');
  cp = require('child_process');
  readline = require('readline');
  shows = {};
  complete = function(line){
    var matches;
    matches = Object.keys(shows).filter(function(s){
      return s.toLowerCase().startsWith(line.toLowerCase());
    });
    return [matches, line];
  };
  request("https://twist.moe", function(err, res, body){
    var $;
    $ = cheerio.load(body);
    $(".series-title").each(function(i, el){
      return shows[$(el).text().trim()] = "https://twist.moe" + $(el).attr('href');
    });
    return console.log("Got titles!");
  });
  rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    completer: complete,
    prompt: "Moe>"
  });
  rl.on("line", function(line){
    var i$, ref$, len$, k, results$ = [];
    for (i$ = 0, len$ = (ref$ = Object.keys(shows)).length; i$ < len$; ++i$) {
      k = ref$[i$];
      if (k.toLowerCase() === line.toLowerCase().trim()) {
        results$.push(request(shows[k] + "", fn$));
      }
    }
    return results$;
    function fn$(err, res, body){
      var $, series, i$, ref$, len$, e;
      $ = cheerio.load(body);
      series = JSON.parse($('#series-object').html());
      for (i$ = 0, len$ = (ref$ = series["episodes"]).length; i$ < len$; ++i$) {
        e = ref$[i$];
        console.log("Playing episode " + e['number']);
        cp.spawnSync("mpv", ["https://twist.moe" + e['source']]);
      }
    }
  });
  rl.on("SIGINT", function(){
    rl.write("Exiiting\n");
    return rl.close();
  });
}).call(this);
